---
AWSTemplateFormatVersion: 2010-09-09
Description: S3 bucket and IAM roles for AppStream 2.0
Parameters:
  ProjectName:
    Description: Set the project name.
    Type: String
    Default: vdi
Resources:
  AppStreamS3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Delete
    UpdateReplacePolicy: Retain
    Properties:
      BucketName: !Sub ${ProjectName}-appstream-${AWS::AccountId}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: IntelligentTiering
            Status: Enabled
            Transitions:
              - TransitionInDays: 0
                StorageClass: INTELLIGENT_TIERING
            NoncurrentVersionExpiration:
              NoncurrentDays: 7
      Tags:
        - Key: Name
          Value: !Sub ${ProjectName}-appstream-${AWS::AccountId}
  AppStreamS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref AppStreamS3Bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowRetrievalPermissionsToS3AppsForAppStream
            Effect: Allow
            Principal:
              Service: appstream.amazonaws.com
            Action:
              - s3:GetObject
            Resource:
              - Fn::Join:
                  - ''
                  - - 'arn:aws:s3:::'
                    - !Ref AppStreamS3Bucket
                    - /*
  AppStreamS3BucketRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-AppStreamS3BucketRole
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - appstream.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: !Sub ${ProjectName}-AppStreamS3BucketRole-policy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:Describe*
                  - s3:Get*
                  - s3:List*
                  - s3:*Object*
                  - s3:*MultipartUpload*
                  - s3-object-lambda:Get*
                  - s3-object-lambda:List*
                  - s3-object-lambda:*Object*
                  - s3-object-lambda:*MultipartUpload*
                Resource:
                  - Fn::Join:
                      - ''
                      - - 'arn:aws:s3:::'
                        - !Ref AppStreamS3Bucket
                  - Fn::Join:
                      - ''
                      - - 'arn:aws:s3:::'
                        - !Ref AppStreamS3Bucket
                        - /*
  AppStreamServiceAccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${ProjectName}-AppStreamServiceAccessRole
      Path: /service-role/
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - appstream.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonAppStreamServiceAccess
Outputs:
  AppStreamS3Bucket:
    Value: !Ref AppStreamS3Bucket
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-AppStreamS3Bucket
  AppStreamS3BucketRoleArn:
    Value: !GetAtt AppStreamS3BucketRole.Arn
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-AppStreamS3BucketRoleArn
  AppStreamServiceAccessRoleArn:
    Value: !GetAtt AppStreamServiceAccessRole.Arn
    Export:
      Name: !Sub ${AWS::Region}-${AWS::StackName}-AppStreamServiceAccessRoleArn
